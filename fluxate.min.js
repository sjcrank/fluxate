var fluxate={createAction:function(n){n=n||{};var e=["name","exec","preExecHandlers"];for(option in n)if(e.indexOf(option)<0)throw"Unsupported option: "+option;var t=n.preExecHandlers?n.preExecHandlers:[];return{name:n.name?n.name.toString():"unnamed",exec:function(){for(var e=0;e<t.length;e++){var o=t[e].apply(this,arguments);if(o)return}n.exec&&n.exec.apply(this,arguments)}}},createStore:function(){var n=[],e=!1,t=function(){e=!0,n.forEach(function(n){n.fn.apply(n.context)}),e=!1};return{onChange:function(t,o){if(e)throw"Adding a change listener while notifying";n.push({fn:t,context:o||this})},offChange:function(t){if(e)throw"Removing a change listener while notifying";for(var o=0;o<n.length;o++)if(n[o].fn===t){n.splice(o,1);break}},addProp:function(n){if(n=n||{},!n.name)throw"Property name was not supplied";var o=["name","initValue","preCommitHandlers"];for(option in n)if(o.indexOf(option)<0)throw"Unsupported option: "+option;var i=n.preCommitHandlers?n.preCommitHandlers:[],r="initValue"in n?n.initValue:null;this[n.name]=function(){if(0===arguments.length)return r;if(e)throw"Changing a property while notifying";for(var n=0;n<i.length;n++){var o=i[n].call(this,r,arguments[0]);if(o)return}r=arguments[0],t()}}}},createStoreWatchMixin:function(){var n=Array.prototype.slice.call(arguments),e=function(){this.isMounted()&&this.setState(this.getStateFromStore())};return{componentDidMount:function(){for(var t=0;t<n.length;t++)n[t].onChange(e,this)},componentWillUnmount:function(){for(var t=0;t<n.length;t++)n[t].offChange(e,this)},getInitialState:function(){return this.getStateFromStore()}}}};"undefined"!=typeof module&&null!==module&&module.exports?module.exports=fluxate:"function"==typeof define&&define.amd&&define(function(){return fluxate});
//# sourceMappingURL=fluxate.js.map